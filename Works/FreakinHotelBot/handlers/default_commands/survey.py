from bot import bot
from logging import basicConfig, DEBUG
from keyboards.reply.contact import request_phone_number
from states.info_states import UserInfoState
from telebot.types import Message

basicConfig(level=DEBUG,
            filename='logs.log',
            format='%(asctime)s %(levelname)s %(message)s')


@bot.message_handler(commands=['survey'])
def survey_command(message: Message) -> None:
    """ –ó–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è """
    bot.set_state(user_id=message.from_user.id,
                  state=UserInfoState.name,
                  chat_id=message.chat.id)
    bot.send_message(chat_id=message.chat.id,
                     text=f'üëãüèª –ü—Ä–∏–≤–µ—Ç, {message.from_user.username}! –°–∫–∞–∂–∏ –º–Ω–µ —Å–≤–æ–µ –∏–º—è')


@bot.message_handler(state=UserInfoState.name)
def get_name(message: Message) -> None:
    """ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø—Ä–æ—Å –≤–æ–∑—Ä–∞—Å—Ç–∞ """
    if not message.text.isalpha():
        bot.send_message(chat_id=message.from_user.id,
                         text='‚ùï –ò–º—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã!')

    else:
        bot.reply_to(message=message, text='Nice!\n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç')
        bot.set_state(user_id=message.from_user.id,
                      state=UserInfoState.age,
                      chat_id=message.chat.id)

        with bot.retrieve_data(user_id=message.from_user.id, chat_id=message.chat.id) as user_data:
            user_data['name']: str = message.text


@bot.message_handler(state=UserInfoState.age)
def get_age(message: Message) -> None:
    """ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ """
    if not message.text.isdigit():
        bot.send_message(message.from_user.id, '‚ùï –í–æ–∑—Ä–∞—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–º!')

    else:
        bot.send_message(chat_id=message.chat.id,
                         text='Good job!\nüì≤ –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É',
                         reply_markup=request_phone_number())
        bot.set_state(user_id=message.from_user.id,
                      state=UserInfoState.phone_number,
                      chat_id=message.chat.id)

        with bot.retrieve_data(user_id=message.from_user.id, chat_id=message.chat.id) as user_data:
            user_data['age']: str = message.text


@bot.message_handler(content_types=['text', 'contact'], state=UserInfoState.phone_number)
def get_phone_number(message: Message) -> None:
    """ –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è """
    if not message.content_type == 'contact':
        bot.send_message(chat_id=message.chat.id,
                         text='ü§∑üèº‚Äç‚ôÇÔ∏è –ö–∞–∫ —Ö–æ—á–µ—à—å, –Ω–æ –µ—Å–ª–∏ —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –≤–Ω–∏–∑—É')

    else:

        with bot.retrieve_data(user_id=message.from_user.id, chat_id=message.chat.id) as user_data:
            user_data['phone_number']: str = message.contact.phone_number

            thanks_data: str = f'üéâ –°–ø–∞—Å–∏–±–æ! \n' \
                               f'–í–æ—Ç —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ:\n\n' \
                               f'–ò–º—è {"-" * 5} {user_data["name"]}\n' \
                               f'–í–æ–∑—Ä–∞—Å—Ç {"-" * 5} {user_data["age"]}\n' \
                               f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ {"-" * 5} {user_data["phone_number"]}'

            bot.delete_state(user_id=message.from_user.id, chat_id=message.chat.id)
            bot.send_message(chat_id=message.chat.id, text=thanks_data)
